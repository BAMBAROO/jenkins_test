name: Auto Pull Request to Master

on:
  push:
    branches:
      - develop

jobs:
  create-pull-request:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Checkout master branch
        uses: actions/checkout@v3
        with:
          ref: master
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.email "bryanathallah7@gmail.com"
          git config --global user.name "Bryan Athallah"

      - name: Checkout develop branch
        uses: actions/checkout@v2
        with:
          ref: 'develop'
          path: 'develop'

      - name: Attempt to merge develop into master
        id: merge_attempt
        run: |
          cd develop
          git fetch origin master
          git checkout -b temp-merge-branch
          # Coba merge dan simpan output ke file untuk dianalisis
          if git merge origin/master --no-commit --no-ff --allow-unrelated-histories >merge_output.txt 2>&1; then
            echo "Merge succeeded with no conflicts."
            echo "merge_status=success" >> $GITHUB_ENV
          else
            echo "Merge failed with conflicts."
            echo "merge_status=conflict" >> $GITHUB_ENV
            # Simpan pesan konflik ke file sementara dan gunakan `printf` untuk format yang aman
            merge_message=$(<merge_output.txt)
            echo "${merge_message}" | sed 's/%/%25/g; s/\n/%0A/g; s/\r/%0D/g' > temp_merge_message.txt
            # printf "merge_message=%s\n" "$(cat temp_merge_message.txt)" >> $GITHUB_ENV
            # git --no-pager diff --name-only --diff-filter=U
          fi
        shell: bash

      - name: Handle merge conflicts
        if: env.merge_status == 'conflict'
        run: |
          echo "Handling merge conflict..."
          echo "Conflict details:"
          echo "$merge_message"  # Menampilkan pesan konflik yang disimpan
          # Tambahkan tindakan khusus yang ingin Anda jalankan jika terjadi konflik

      - name: Handle successful merge
        if: env.merge_status == 'success'
        run: |
          echo "Merge was successful. Proceeding with the workflow..."
          # Tambahkan tindakan yang ingin Anda jalankan jika merge berhasil

      - name: Create Pull Request
        if: ${{ success() }}
        id: create_pr
        uses: repo-sync/pull-request@v2
        with:
          source_branch: develop
          destination_branch: master
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_title: "Auto PR: Merge develop into master"
          pr_body: |
            This is an automatically generated pull request to merge changes from `develop` into `master`.
          pr_draft: false
          pr_label: "auto-merge"

      - name: OUTPUR PR NUMBER
        if: ${{ success() }}
        run: echo "The PR Number is ${{ steps.create_pr.outputs.pr_number}}"

      - name: Create Task in ClickUp with PR Number
        if: ${{ success() }}
        env:
          PR_NUMBER: ${{ steps.create_pr.outputs.pr_number }}
        run: |
          curl -X POST https://api.clickup.com/api/v2/list/901804076439/task \
          -H "Authorization: ${{ secrets.CLICKUP_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{
            "name": "PR #'${PR_NUMBER}' Task",
            "description": "This task is associated with PR number '${PR_NUMBER}'",
            "status": "open",
            "assignees": [90602611],
            "custom_fields": [
              {
                "id": "8b298a3f-2e44-4b69-b7ef-9769f1417bd8",
                "value": "'${PR_NUMBER}'"
              }
            ]
          }'